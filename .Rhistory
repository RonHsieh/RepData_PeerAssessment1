mx1 %*% mx2
crossprod(mx1,mx2)
crossmx<- crossprod(mx1,mx2)
solve(mx1,crossmx)
solve(25,crossmx)
View(crossmx)
mx1<- rbind(c(1,10),c(10,1))
mx1
solve(mx1)
solve(mx1) %*% mx1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
mrx1<- makeCacheMatrix(c(1,10),c(10,1))
mrx1<- makeCacheMatrix(1,2)
mrx1<- makeCacheMatrix(10)
mrx1
casheSolve(mrx1)
cacheSolve(mrx1)
cacheSolve(mrx1)
mtrx2<- makeCacheMatrix(1:10)
cacheSolve(mtrx2)
mtrx2<- makeCacheMatrix(c(2,3))
cacheSolve(mtrx2)
mrx1<- makeCacheMatrix(100)
cacheSolve(mrx1)
source('~/.active-rstudio-document')
mtrx3<- makeCacheMatrix(10,3,3)
cacheSolve(mrx1)
x<- matrix(c(1,10),c(10,1))
View(x)
View(x)
x<- matrix(c(1,10),3,3)
x<- matrix(c(1,10),2,2)
mtrx3<- makeCacheMatrix(x)
cacheSolve(mtrx3)
solve(x)
x<- matrix(1:4,2,2)
mtrx<- makeCacheMatrix(x)
cacheSolve(mtrx)
cacheSolve(mtrx)
makeCacheMatrix(x)
?list
?if
?`if`
household_power_consumption <- read.csv("~/Desktop/Coursera-DSS/exploratorydata/household_power_consumption.txt", sep=";")
View(household_power_consumption)
View(mx1)
View(household_power_consumption)
class(household_power_consumption)
hptime<- strptime(household_power_consumption$Date)
?strptime
hptime<- strptime(household_power_consumption$Date, format="%d/%m/%Y")
transform(house_power_consumption, Date = striptime(house_power_consumption$Date, format=%d/%m/%Y))
transform(house_power_consumption, Date = hptime)
transform(household_power_consumption, Date = hptime)
activity <- read.csv("~/Desktop/Coursera-DSS/Reprodata/activity.csv")
View(activity)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
head(activity)
class(activity)
class(activity$date)
summary(activity)
?read.csv
read.csv("activity.csv")
getwd()
setwd("~/Desktop/Coursera-DSS/Reprodata")
str(activity)
View(activity)
table(activity)
summary(activity)
library("lubridate", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
activity$date<- ymd(activity$date)
class(activity$date)
summary(activity)
library("lubridate")
nrow(activity)
2355/5
?tapply
meanperday<- tapply(na.omit(activity$steps), activity$date, mean)
?group
naomit<- subset(activity, activity$steps!= "NA")
View(naomit)
meanperday<- tapply(activity$steps, activity$date, mean)
?table
as.table(meanperday)
totalmean<- mean(na.omit(activity$steps))
totalsum<- sum(na.omit(activity$steps))
act2<- naomit
sumperday<- tapply(act2$steps, act2$date, sum)
head(sumperday)
cleanact<- act2
sumperday
activity[,2012-11-30]
activity[,"2012-11-30"]
activity[,ymd(2012-11-30)]
subset(activity, ymd(activity$date) = ymd(2012-11-30))
subset(activity, ymd(activity$date) == ymd(2012-11-30))
subset(activity, ymd(activity$date) == ymd("2012-11-30"))
ymd("2012-11-30")
?hist
hist(cleanact$steps, col= "blue")
hist(sumperday, col= "blue")
hist(sumperday, col= "blue", main= "Total number of stpes taken per day", xlab= "Steps taken per day")
hist(sumperday, col= "blue", main= "Histogram of steps taken per day", xlab= "Total number of steps taken per day")
install.packages("xtable")
sum<- summary(activity)
library("xtable")
xtable(sum)
meanperday<- tapply(cleanact$steps, cleanact$date, mean)
meanperday
medianperday<- tapply(cleanact$steps, cleanact$date, median)
medianperday
View(cleanact)
sum(cleanact$steps == 0 & ymd(cleanact$date)==ymd("2012-10-02"))
sum(cleanact$steps == 0 & ymd(cleanact$date)==ymd("2012-10-03"))
tapply(cleanact$steps[cleanact$steps== 0], cleanact$date, sum)
zeros<- subset(cleanact, cleanact$steps == 0)
tapply(zeros$steps, zeros$dates, length)
tapply(zeros$steps, zeros$dates, sum)
View(zeros)
tapply(zeros$steps, zeros$date, sum)
tapply(zeros$steps, zeros$date, length)
xtable(cbind(meanperday, medianperday))
library("knitr")
kable(cbind(meanperday, medianperday))
?kable
table0<- tapply(zeros$steps, zeros$date, length)
?any
any(table0<=144)
any(table0=144)
any(table0 >=144)
?mfrow
library("ggplot2")
?mfrow
?plot
plot(cleanact$date, cleanact$steps)
plot(cleanact$date, cleanact$steps, type= "l")
plot(cleanact$interval, cleanact$steps, type= "l")
interperday<- tapply(cleanact$steps, cleanact$interval, mean)
plot(cleanact$interval, interperday, type= "l")
plot(unique(cleanact$interval), interperday, type= "l")
interval<- unique(cleanact$interval)
plot(as.factor(interval), interperday, type= "l")
plot(unique(cleanact$interval), interperday, type= "l")
library("lubridate")
hm(0)
hm(00)
hm(0000)
hm(00:00)
hm(00-00)
?hm
hm("0000")
hm("00,00")
hm("01,05")
intervals <- strptime(sprintf("%04d", unique(cleanact$interval), format="%H%M")
)
intervals <- strptime(sprintf("%04d", unique(cleanact$interval)), format="%H%M")
head(intervals)
sprintf("%04d", 1050)
cleanact$time<- sprintf("%04d", cleanact$interval)
View(cleanact)
?ymdhm
?ymd-hm
ymd_hm("2012-10-02 0110")
cleanact$time<- paste(cleanact$date, sprintf("%04d", cleanact$interval))
View(cleanact)
cleanact$time<- ymd_hm(cleanact$time)
View(cleanact)
cleanact$time<- sprintf("%04d", cleanact$interval)
cleanact$time<- ymd_hm(cleanact$time)
cleanact$time<- striptime(cleanact$time, format= %H%M)
cleanact$time<- striptime(cleanact$time, format= "%H%M")
cleanact$time<- strptime(cleanact$time, format= "%H%M")
View(cleanact)
cleanact$time<- sprintf("%04d", cleanact$interval)
View(cleanact)
cleanact$time<- strptime(cleanact$time, format= "%H%M")
View(cleanact)
interperday<- tapply(cleanact$steps, cleanact$interval, mean)
interperday<- tapply(cleanact$steps, cleanact$time, mean)
unique(cleanact$time)
plot(unique(cleanact$time), interperday, type="l")
max(interperday)
head(interperday)
interperday[max(interperday)]
table(interperday)
interperday[interperday == max(interperday)]
naset<- subset(activity, activity$steps == "NA")
nrow(naset)
View(naset)
naset<- subset(activity, activity$steps == NA)
naset<- subset(activity, activity$steps == "NA")
head(activity$steps)
sum(!is.na(activity))
sum(is.na(activity))
interperday
activity2<- activity %>%
mutate(steps = ifelse(is.na(steps), interperday[names(interperday) == interval], steps))
require(dplyr)
activity2<- activity %>%
mutate(steps = ifelse(is.na(steps), interperday[names(interperday) == interval], steps))
View(activity2)
summary(activity2)
activity2<- activity %>%
mutate(steps = ifelse(is.na(steps), interperday[names(interperday) == activity$interval], steps))
summary(activity2)
head(activity2[is.na(activity2$steps)])
head(activity2[,is.na(activity2$steps)])
activity2[is.na(activity2$steps)]
activity2[is.na(activity2$steps),]
head(activity2[,is.na(activity2$steps),])
head(activity2[is.na(activity2$steps),])
activity2<- activity %>%
mutate(input = ifelse(is.na(steps), interperday[names(interperday) == activity$interval], steps))
View(activity2)
summary(activity2)
names(interperday)
activity2<- activity %>%
mutate(input = ifelse(is.na(steps), mean(interval), steps))
summary(activity2)
View(activity2)
activity2<- activity %>%
mutate(input = ifelse(is.na(steps), sapply(steps, interval, mean), steps))
head(sapply(activity$steps, activity$interval, mean))
class(activity$interval)
head(sapply(activity$steps, as.facter(activity$interval), mean))
head(sapply(activity$steps, as.factor(activity$interval), mean))
?sapply
head(sapply(split(activity$steps, activity$interval), mean))
head(sapply(split(cleanact$steps, clean$interval), mean))
head(sapply(split(cleanact$steps, cleanact$interval), mean))
activity2<- activity %>%
mutate(input = ifelse(is.na(steps), interperday, steps))
View(activity2)
summary(activity2)
inputnot0<- subset(activity2, activity2$input != 0)
?wday
activity2<- activity %>%
mutate(weekday = ifelse(wday(date) == 1 | 7, "weekend", "weekday")
)
View(activity2)
View(activity2)
activity2<- activity %>%
mutate(input = ifelse(is.na(steps), interperday, steps))
activity2<- activity2 %>%
mutate(weekday = ifelse(wday(date) == 1 | 7, "weekend", "weekday"))
View(activity2)
summary(activity2)
table(activity2$weekday)
activity2<- activity2 %>%
mutate(weekday = ifelse(wday(ymd(date)) == 1 | 7, "weekend", "weekday"))
table(activity2$weekday)
wday(ymd("2012-10-01"))
ifelse(wday(ymd("2012-10-01")) == 1 | 7, "weekend", "weekday")
ifelse(wday(ymd("2012-10-01")) == 1|7, "weekend", "weekday")
ifelse(wday(ymd("2012-10-01")) == 1, "weekend", "weekday")
ifelse(wday(ymd("2012-10-01"), abbr= TRUE) == "Sun"|"Sat", "weekend", "weekday")
activity2<- activity2 %>%
mutate(weekday = ifelse(wday(ymd(date), abbr=TRUE) == "Sun" | wday(ymd(date), abbr=TRUE) == "Sat", "weekend", "weekday"))
)
View(activity2)
table(activity2$weekday)
ifelse(wday(ymd("2015-03-07"), abbr=TRUE) == "Sun" | wday(ymd(date), abbr=TRUE) == "Sat", "weekend", "weekday"
)
activity2<- activity2 %>%
mutate(weekday = ifelse(wday(ymd(date), abbr=TRUE)) == "Sun" | wday(ymd(date), abbr=TRUE)) == "Sat", "weekend", "weekday"))
activity2<- activity2 %>%
mutate(weekday = ifelse(wday(ymd(date), abbr=TRUE)) == "Sun" | wday(ymd(date), abbr=TRUE) == "Sat", "weekend", "weekday")
activity2<- activity2 %>%
mutate(weekday = ifelse(wday(ymd(date), abbr=TRUE) == "Sun" | wday(ymd(date), abbr=TRUE) == "Sat", yes= "weekend", no= "weekday"))
table(activity2)
View(activity2)
table(activity2$weekday)
ifelse(wday(ymd("2015-03-07"), abbr=TRUE) == "Sun" | wday(ymd("2015-03-07"), abbr=TRUE) == "Sat", "weekend", "weekday")
ifelse(wday(ymd("2015-03-07"), abbr=TRUE) == "Sun" || wday(ymd("2015-03-07"), abbr=TRUE) == "Sat", "weekend", "weekday")
wday(ymd("2015-03-07"), abbr=TRUE)
wday(ymd("2015-03-07"), label= TRUE, abbr=TRUE)
activity2<- activity2 %>%
mutate(weekday = ifelse(wday(ymd(date), lable= TRUE, abbr=TRUE) == "Sun" | wday(ymd(date), lable= TRUE, abbr=TRUE) == "Sat", "weekend", "weekday"))
activity2<- activity2 %>%
mutate(weekday = ifelse(wday(ymd(date), label= TRUE, abbr=TRUE) == "Sun" | wday(ymd(date), label= TRUE, abbr=TRUE) == "Sat", "weekend", "weekday"))
table(activity2$weekday)
View(activity2)
View(act2)
View(activity)
View(cleanact)
View(activity2)
library("dplyr")
activity2<- activity2 %>%
mutate(time = sprintf("%04d",interval)) %>%
strptime(time, format= "%H%M")
View(activity2)
activity2<- activity2 %>%
mutate(time = strptime(sprintf("%04d",interval), format= "%H%M")
)
activity2$time<- sprintf("%04d", activity2$interval)
activity2$time<- strptime(cleanact$time, format= "%H%M")
activity2$time<- sprintf("%04d", activity2$interval)
activity2$time<- strptime(cleanact$time, format= "%H%M")
activity2$time<- strptime(activity2$time, format= "%H%M")
View(activity2)
newperday<- tapply(activity2$input, activity2$interval, mean)
newperday<- tapply(activity2$input, activity2$weekday, mean)
qplot(time, newperday, data= activity2, facets= weekday ~.)
qplot(unique(time), newperday, data= activity2, facets= weekday ~.)
?qplot
qplot(unique(activity$time), newperday, data= activity2, facets= weekday ~.)
newperday
newperday<- tapply(activity2$input, activity2$interval, mean)
qplot(unique(time), newperday, data= activity2, facets= weekday ~.)
qplot(unique(activity2$time), newperday, data= activity2, facets= weekday ~.)
unique(activity2$time)
qplot(unique(activity2$time), newperday, facets= weekday ~.)
qplot(unique(activity2$time), newperday, facets= activity2$weekday ~.)
View(activity2)
?qplot
utime<- names(newperday)
utime
unique(activity2$time)
utime<- unique(activity2$time)
qplot(time, input, data=activity2, facets= weekday ~.)
plot(time, input, data=activity2, facets= weekday ~.)
ggplot(time, input, data=activity2, facets= weekday ~.)
qplot(time, input, data=activity2, facets= weekday ~., geom= "line")
qplot(time, input, data=activity2, facets= weekday ~., geom= "density")
qplot(time, input, data=activity2, facets= weekday ~., geom= "line")
qplot(utime, newperday, data=activity2, facets= weekday ~., geom= "line")
qplot(utime, newperday, facets= weekday ~., geom= "line")
qplot(utime, newperday, facets= activity$2weekday ~., geom= "line")
qplot(utime, newperday, facets= activity2$weekday ~., geom= "line")
meanset<- function(data, factor){
sub<- subset(data, weekday=factor)
tapply(sub$input, sub$interval, mean)}
weekday<- meanset(activity2, "weekday")
weekend<- meanset(activity2, "weekend")
meanset<- function(data, factor){
sub<- subset(data, weekday==factor)
tapply(sub$input, sub$interval, mean)}
weekday<- meanset(activity2, "weekday")
weekend<- meanset(activity2, "weekend")
?plot
par(mfrow=c(2,1))
plot(utime, weekday, type= "l")
plot(utime, weekend, type= "l")
par(mfrow=c(2,1))
plot(utime, weekend, type= "l")
par(mfrow=c(2,1), mar= 0.2)
?plot
par(mfrow=c(2,1), mar= c(rep(0.2, 4))
)
plot(utime, weekday, type= "l")
plot(utime, weekend, type= "l")
par(mfrow=c(2,1), mar= c(rep(0.2, 4))
)
par(mfrow=c(2,1), mar= c(1, 0.5, 1, 0.5))
plot(utime, weekday, type= "l")
plot(utime, weekend, type= "l")
?par
?data.frame
plotset<- data.frame(weekday, weekend, utime)
plotset<- colname(c("weekday","weekend", "time"))
plotset<- colnames(c("weekday","weekend", "time"))
plotset<- data.frame(weekday, weekend, utime)
colnames(plotset)<- c("weekday","weekend", "time")
View(plotset)
library("reshape2")
?melt
plotset<- melt(plotset)
plotset<- melt(plotset, id= c("weekday", "weekend"))
View(plotset)
plotset<- data.frame(weekday, weekend, utime)
colnames(plotset)<- c("weekday","weekend", "time")
View(plotset)
plotset<- melt(plotset, id= c("weekday", "weekend"))
View(plotset)
plotset<- data.frame(weekday, weekend, utime)
colnames(plotset)<- c("weekday","weekend", "time")
plotset<- melt(plotset, id= "time"))
plotset<- melt(plotset, id= "time")
View(plotset)
View(plotset)
plotset<- data.frame(weekday, weekend, utime)
colnames(plotset)<- c("weekday","weekend", "time")
library("tidyr")
?gather
plotsetm<- gather(plotset, time, c("weekday", "weekend"))
View(plotset)
plotsetm<- gather(plotset, c("weekday", "weekend"), "time")
plotsetm<- gather(plotset, weekdays, -time)
plotsetm<- gather(plotset, weekdays, steps, -time)
View(plotsetm)
View(plotsetm)
head(plotsetm)
qplot(time, steps, data= plotsetm, geom="line", facets= weekdays ~.)
?qplot
qplot(time, steps, data= plotsetm, geom="line", facets= weekdays ~., theme = "bw", xlab= "Interval", ylab= "Number of steps")
q<- qplot(time, steps, data= plotsetm, geom="line", facets= weekdays ~., xlab= "Interval", ylab= "Number of steps")
q + theme_bw() + element_line(color= c("red", "orange"))
q<- qplot(time, steps, data= plotsetm, geom="line", facets= weekdays ~., xlab= "Interval", ylab= "Number of steps")
q + theme_bw() + element_line(color= c("red", "orange"))
q + theme_bw() + theme(element_line(color= c("red", "orange")))
q+ theme_bw()
+ geom_line(color= c("red", "orange"))
+ geom_line(colour= c("red", "orange"))
+ geom_line(colour= "blue")
?geom_line
+ geom_line(aes(colour= weekdays))
q + + geom_line(aes(colour= weekdays))
q + geom_line(aes(colour= weekdays))
q + theme(legend.position="none")
q + geom_line(aes(colour= weekdays)) + theme(legend.position="none")
q + theme_bw() + geom_line(aes(colour= weekdays)) + theme(legend.position="none")
activity2$time<- strptime(activity2$time, format= "%H:%M")
View(activity2)
activity2$time<- strptime(activity2$time, format= "%H%M")
View(activity2)
activity2$time<- sprintf("%04d", activity2$interval)
View(activity2)
activity2$time<- strptime(activity2$time, format= "%H:%M")
View(activity2)
activity2$time<- strptime(activity2$time, format= "%H%M")
activity2$time<- sprintf("%04d", activity2$interval)
activity2$time<- strptime(activity2$time, format= "%H%M")
View(activity2)
activity2$time <- format(as.POSIXct(activity2$time) ,format = "%H:%M")
View(activity2)
View(activity2)
utime<- unique(activity2$time)
meanset<- function(data, factor){
sub<- subset(data, weekday==factor)
tapply(sub$input, sub$interval, mean)}
weekday<- meanset(activity2, "weekday")
weekend<- meanset(activity2, "weekend")
utime<- unique(activity2$time)
par(mfrow=c(2,1), mar= c(4.5, 4.5, 2, 2))
plot(utime, weekday, type= "l", main= "Weekday", xlab= "Interval", ylab= "Number of steps")
class(activity2$time)
utime<- hm(activity2$time)
head(utime)
utime<- unique(hm(activity2$time))
utime<- hm(activity2$time)
t<- table(utime)
t
remove(t)
png()
activity2$time <- as.numeric(activity2$time - trunc(activity2$time, "days"))
dtstring <- c(
"2011-09-28 03:33:00", "2011-08-24 13:41:00", "2011-09-19 16:14:00",
"2011-08-18 11:01:00", "2011-09-17 06:35:00", "2011-08-15 12:48:00"
)
dtPOSIXct <- as.POSIXct(dtstring)
dtPOSIXct <- as.POSIXct(dtstring)
?as.POSIXct
dtPOSIXct <- as.POSIXct(dtstring)
dtPOSIXct
dtTime <- as.numeric(dtPOSIXct - trunc(dtPOSIXct, "days"))
dtTIME
dtTime
time<- activity2$time
class(time)
activity2$time<- strptime(activity2$time, format= "%H:%M")
View(activity2)
activity2$time <- as.numeric(activity2$time - trunc(activity2$time, "days"))
View(activity2)
plotset$time <- as.numeric(plotset$time - trunc(plotset$time, "days"))
View(plotset)
plotsetm<- gather(plotset, weekdays, steps, -time)
View(plotsetm)
q<- qplot(time, steps, data= plotsetm, geom="line", facets= weekdays ~., xlab= "Interval", ylab= "Number of steps")
q + theme_bw() + geom_line(aes(colour= weekdays)) + theme(legend.position="none") +
)
xlab= "Interval", ylab= "Number of steps")
q + theme_bw() + geom_line(aes(colour= weekdays)) + theme(legend.position="none")
q<- qplot(time, steps, data= plotsetm, geom="line", facets= weekdays ~., xlab= "Interval", ylab= "Number of steps")
q + theme_bw() + geom_line(aes(colour= weekdays)) + theme(legend.position="none")
print(q)
View(plotsetm)
head(plotsetm)
qplot(time, steps, data= plotsetm, geom="line", facets= weekdays ~., xlab= "Interval", ylab= "Number of steps")
dev.off()
qplot(time, steps, data= plotsetm, geom="line", facets= weekdays ~., xlab= "Interval", ylab= "Number of steps")
pnd()
png()
qplot(time, steps, data= plotsetm, geom="line", facets= weekdays ~., xlab= "Interval", ylab= "Number of steps")
quartz()
qplot(time, steps, data= plotsetm, geom="line", facets= weekdays ~., xlab= "Interval", ylab= "Number of steps")
q + theme_bw() + geom_line(aes(colour= weekdays)) + theme(legend.position="none") + scale_x_datetime(labels=date_format("%H:%M"))
q + theme_bw() + geom_line(aes(colour= weekdays)) + theme(legend.position="none") + scale_x_datetime(labels="%H:%M")
plotset$time<- as.POSIXct(plotset$time)
plotset<- data.frame(weekday, weekend, utime)
utime<- unique(activity2$time)
activity2$time<- sprintf("%04d", activity2$interval)
activity2$time<- strptime(activity2$time, format= "%H%M")
setwd("~/Desktop/Coursera-DSS/Reprodata/RepData_PeerAssessment1")
knit2html()
knit2html(PA1_template.Rmd)
knit2html("PA1_template.Rmd")
xtable(sumperday)
library("xtable")
xtable(sumperday)
?xtable
?kable
kable(sumperday, format= "html")
as.table(sumperday)
kable(as.table(table0), format= "html")
as.table(head(activity, 15))
class(as.table(sumperday))
as.data.frame(sumperday)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
